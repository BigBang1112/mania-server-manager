FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/sdk:9.0-bookworm-slim AS build
ARG TARGETARCH
WORKDIR /src

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy project file and restore as distinct layers
COPY ManiaServerManager/*.csproj .
RUN dotnet restore -a $TARGETARCH

# Copy source code and publish app
COPY ManiaServerManager/. .
RUN dotnet publish --no-restore -a $TARGETARCH -o /app
RUN rm /app/*.dbg


# Final stage/image
FROM mcr.microsoft.com/dotnet/runtime-deps:9.0-bookworm-slim
ARG TARGETARCH

ENV MSM_ARCH=$TARGETARCH
RUN if [ "$MSM_ARCH" = "arm64" ]; then \
    apt update && apt install wget gnupg -y && \
    wget https://ryanfortner.github.io/box64-debs/box64.list -O /etc/apt/sources.list.d/box64.list && \
    wget -qO- https://ryanfortner.github.io/box64-debs/KEY.gpg | gpg --dearmor -o /etc/apt/trusted.gpg.d/box64-debs-archive-keyring.gpg && \
    apt update && apt install box64 -y && \
    rm -rf /var/lib/apt/lists/*; \
fi

WORKDIR /app
COPY --from=build /app .

# Allow APP_UID to write to the data directories
RUN mkdir -p /app/data && \
    chown -R $APP_UID:$APP_UID /app/data && \
    chmod -R 775 /app/data

EXPOSE 2350/tcp 2350/udp 3450/tcp 3450/udp

#HEALTHCHECK --interval=5s --timeout=5s --start-period=20s CMD bash -c "</dev/tcp/127.0.0.1/5000" || exit 1

USER $APP_UID

COPY --chmod=0755 entrypoint.sh .
ENTRYPOINT ["./entrypoint.sh"]
