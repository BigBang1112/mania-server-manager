name: Docker Image Publish

on:
  schedule:
    - cron: "0 5 */2 * *" # Every 2 days at 05:00 UTC
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: mania-server-manager

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: Dockerfile
            platforms: linux/amd64,linux/arm64
            tags: |
              type=raw,value=latest
              type=raw,value=noble
          - dockerfile: Dockerfile.debian
            platforms: linux/amd64,linux/arm64
            tags: |
              type=raw,value=bookworm-slim
          - dockerfile: Dockerfile.alpine
            platforms: linux/amd64
            tags: |
              type=raw,value=alpine
          - dockerfile: Dockerfile.wine
            platforms: linux/amd64
            tags: |
              type=raw,value=noble-wine
          - dockerfile: Dockerfile.fedora
            platforms: linux/amd64
            tags: |
              type=raw,value=fedora
          - dockerfile: Dockerfile.plucky
            platforms: linux/amd64,linux/arm64
            tags: |
              type=raw,value=plucky
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: ${{ matrix.tags }}
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platforms }}
          file: ${{ matrix.dockerfile }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
